# This script reads the WW3 bathymetry and mask generated by gridgen
# interpolates for a higher resolution data.
# In this example the are is focused in Rio de Janeiro with 3 km. 
# After interpolation the data become 1 km of spatial resolution.
#
import numpy as np
from scipy.interpolate import griddata

#----loading files
bat=np.loadtxt('../examples/rio/rio.dep')
mask=np.loadtxt('../examples/rio/rio.mask')

#---original lat and lon and number of points
#---this could be found in rio.meta
latMin = -26.8; latMax = -19.5
lonMin = 314.; lonMax = 322
nLon1 = 223; nLat1 = 203

x = np.linspace(lonMin, lonMax, num=nLon1)     
y = np.linspace(latMin, latMax, num=nLat1)  
                                
x,y=np.meshgrid(x,y)

x=x.ravel()              
y=y.ravel()              
bat=bat.ravel()              
mask=mask.ravel()              


#----new number of points for interpolation
nLon2 = 446; nLat2 = 406

#----keep lat and lon and modify the number of
#----points to get the derised spatial resolution
x2 = np.linspace(lonMin, lonMax, num=nLon2)    
y2 = np.linspace(latMin, latMax, num=nLat2)  
                                               
x2,y2=np.meshgrid(x2,y2)

#----interpolating data
batnew = griddata(  (x, y), bat, (x2, y2), method='nearest' )  
masknew = griddata(  (x, y), mask, (x2, y2), method='nearest' )  

#----saving in new files
np.savetxt('rio.mask2',masknew,fmt='%d')
np.savetxt('rio.dep2',batnew,fmt='%d')
