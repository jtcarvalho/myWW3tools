# This script reads the WW3 obstacles generated by gridgen
# interpolates for a higher resolution data.
# In this example the are is focused in Rio de Janeiro with 3 km. 
# After interpolation the data become 2 km of spatial resolution.
#
# ! Atention for the number of points for lat !
#   Need to be always the double for Obs
#
import numpy as np
from scipy.interpolate import griddata


#----loading file
obs=np.loadtxt('../examples/rio/rio.obs')

#---original lat and lon and number of points
#----for Obs, lat points need to be doubled
latMin = -26.8; latMax = -19.5
lonMin = 314.; lonMax = 322
nLon1 = 223; nLat1 = 406 

x = np.linspace(lonMin, lonMax, num=nLon1)     
y = np.linspace(latMin, latMax, num=nLat1) 

x,y=np.meshgrid(x,y)

x=x.ravel()              
y=y.ravel()                           
obs=obs.ravel()              

#----new number of points for interpolation
#----for Obs, lat points need to be doubled
nLon2 = 446; nLat2 = 812

#----keep lat and lon and modify the number of
#----points to get the derised spatial resolution
x2 = np.linspace(lonMin, lonMax, num=nLon2)    
y2 = np.linspace(latMin, latMax, num=nLat2)  
                                               
x2,y2=np.meshgrid(x2,y2)

#----interpolating data
obsnew = griddata(  (x, y), obs, (x2, y2), method='nearest' )  

#----saving in new files
np.savetxt('rio.obs2',obsnew,fmt='%d')
